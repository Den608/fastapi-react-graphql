version: "3.9"

services:
  server:
    image: fastapi-server:${APP_VERSION}
    container_name: ${PROJECT_NAME}-server
    hostname: server
    restart: unless-stopped
    stop_grace_period: 10s
    env_file: .env
    command: gunicorn -b 0.0.0.0:3000 -w 4 -k uvicorn.workers.UvicornH11Worker main:app
    build:
      context: server
      args:
        PYTHON_TAG: $PYTHON_TAG
        PYTHON_POETRY_VERSION: $PYTHON_POETRY_VERSION
    environment:
      ELASTICSEARCH_HOST: $ELASTICSEARCH_HOST
      POSTGRES_DB_URL: $POSTGRES_DB_URL
      REDIS_INTERNAL_HOST: $REDIS_INTERNAL_HOST
      REDIS_INTERNAL_PORT: $REDIS_INTERNAL_PORT
    ports:
      - ${SERVER_PORT}:3000

  postgres:
    image: postgres:${POSTGRES_TAG}
    container_name: ${PROJECT_NAME}-postgres
    hostname: postgres
    restart: unless-stopped
    stop_grace_period: 10s
    env_file: .env
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:${REDIS_TAG}
    container_name: ${PROJECT_NAME}-redis
    hostname: redis
    restart: always
    stop_grace_period: 10s
    ports:
      - ${REDIS_PORT}:6379

  cloudbeaver:
    image: dbeaver/cloudbeaver:${CLOUDBEAVER_TAG}
    container_name: ${PROJECT_NAME}-cloudbeaver
    hostname: cloudbeaver
    restart: always
    stop_grace_period: 10s
    ports:
      - ${CLOUDBEAVER_PORT}:8978
    volumes:
      - cloudbeaver-data:/opt/cloudbeaver/workspace

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_TAG}
    container_name: ${PROJECT_NAME}-elasticsearch
    hostname: elasticsearch
    restart: always
    stop_grace_period: 10s
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - ${ELASTICSEARCH_PORT}:9200

  metabase:
    image: metabase/metabase:${METABASE_TAG}
    container_name: ${PROJECT_NAME}-metabase
    hostname: metabase
    restart: unless-stopped
    stop_grace_period: 10s
    env_file: .env
    environment:
      MB_DB_TYPE: postgres
      MB_DB_HOST: postgres
      MB_DB_PORT: 5432
      MB_DB_PASS: $DB_PASSWORD
      MB_DB_DBNAME: $DB_NAME
      MB_DB_USER: $DB_USER
      MB_DB_FILE: /metabase-data/metabase.db
    ports:
      - ${METABASE_PORT}:3000
    volumes:
      - metabase-data:/metabase-data
    depends_on:
      - postgres

  adminer:
    image: adminer:${ADMINER_TAG}
    container_name: ${PROJECT_NAME}-adminer
    hostname: adminer
    restart: unless-stopped
    stop_grace_period: 10s
    env_file: .env
    ports:
      - ${ADMINER_PORT}:8080

networks:
  default:
    name: $PROJECT_NAME
    driver: bridge

volumes:
  postgres-data: {}
  cloudbeaver-data: {}
  elasticsearch-data: {}
  metabase-data: {}
